openapi: 3.0.0
info:
  title: Results API
  version: '1.0'
  description: |-
    This API defines the result api between the LA and LMS. This is intended for tests, assigments or exams. not so much for the formative learning in the publishers system

    As a first definition a simple result is defined for a student for a specific schoolsubject. This can be expanded later


    These results are send as events. When the consent flow is completed and both LA and LMS have consent the events are send. 

    At this moment there is no catchup mechanism defined. (we still have discussion if there should be an API to retrieve the results.)



    ## Events
    Events generated by the Progress API are :
     - `la.simpleresult` - send from the LA to the LMS prefereably near realtime so the LMS can show results to teachers.  


    ## Scopes and Data

    - la.result- scope needed to send results events from la to lms
  contact:
    name: Stichting SEM
    url: 'https://stichtingsem.org/'
    email: mcginkel@gmail.com
servers:
  - url: 'https://example.stichtingsem.org/api'
    description: course
paths: {}
components:
  schemas:
    SimpleResult:
      title: SimpleResult
      type: object
      x-examples:
        example-1:
          id: id-dat-niet-uit-maakt-3534426
          schemaVersion: 0
          assessmentId: 34-123-666-222-33333
          assessmentName: ProefExamen nederlands
          eckId: eck1
          userId: 12345@edu.nl
          status: final
          assessmentDateTime: '2019-08-24T14:15:22Z'
          schoolSubjectId: '63542987645344'
          additionalInfo: ''
          result: '7.6'
          resultType: 1.0-10.0
          employees:
            userId: abj@edu.nl
            eckId: eck-T123
      description: A description of a simple result statement that an LA will send to the LMS
      properties:
        id:
          type: string
          description: Unique id of this result
        schemaVersion:
          type: integer
          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'
        assessmentId:
          type: string
          description: Assessment reference for which result is reported.
        assessmentName:
          type: string
          description: Name of the Assessment to be displayed to employees that register result in the gradebook of the SIS or LMS.
        eckId:
          type: string
          description: |-
            The eckid of the student for which the progress is reported.
            one of userid or eckId is required.
        userId:
          type: string
          description: |-
            The id of the student for which the progress is reported. userid. (nledupersonrealId or nledupersonprofileId)
            one of userid or eckId is required.
        status:
          type: string
          description: 'New status of the activity. '
          enum:
            - concept
            - final
            - obsolete
        assessmentDateTime:
          type: string
          format: date-time
          description: Date and time of the Assessment.
        schoolSubjectId:
          type: string
          description: Reference to the SchoolSubject of the Assessment.
        additionalInfo:
          type: string
          description: Optional additional information about this result. E.g. for differing a result on HAVO level from a result on VWO level for a single Student.
        result:
          type: string
          description: Assessment Result of the Student. (see resultType for interpretation)
        resultType:
          type: string
          enum:
            - 1.0-10.0
            - OVG
          description: |-
            Enum that defines allowed values for result 
            - "1.0-10.0": number, with 1 decimal :[1.0-10.0] 
            - OVG: 1 letter ([G], [V ]or [O]) for Goed, Voldoende or Onvoldoende (dutch specific)
        employees:
          type: object
          description: List of employee that is allowed to register the result in the gradebook of the SIS or LMS.
          properties:
            userId:
              type: string
              description: |-
                The id of the teacher. (nledupersonrealId or nledupersonprofileId)
                one of userid or eckId is required.
            eckId:
              type: string
              description: |-
                The eckid of the teacher.
                one of userid or eckId is required.
          required:
            - userId
            - eckId
      required:
        - id
        - assessmentId
        - assessmentName
        - status
        - assessmentDateTime
        - result
        - resultType
  securitySchemes:
    APIKey:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: ''
          refreshUrl: ''
          scopes:
            la.result: scope to send result events to an LMS
