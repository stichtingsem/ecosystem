openapi: 3.0.0
info:
  title: Usage API
  version: '1.0'
  description: |
    This is an API provided by the Learning Application in the SEM ecosystem, and is designed for a learning application to make information about usage of a product by a teacher or student known to the Marketplace. 

    The Usage events are send when a student uses the product in the entitlement. A LA can choose to send the usage per individual or if the entitlement is on school level , skip the student id and send the anonymous total.

    # get api
    In the Usage get api has the option to return the usage including a list of students who have used product in this entitlement and thebey activated the licenses
    Usage can be picked up per entitlement or per entitlee/licenses

    # Events
    The usage event will send the usage information of one student per one product

    The usage events can be send on several moments:
                - InitialActivation - each time a user uses the product in the entitlement for the first time
                - uniqueActivation - eacht time time a user uses the product in the entitlement
                - weeklyActivation -  at the end of each week a user used the product in the entitlement
                - monthlyActivation -  at the end of each montha user used the product in the entitlement
              
    The initalActivation is most important and LA's are expected to implement at least this one.  The unique, weekly and monthly activations are defined to be used in par per use scenario's and are not yet in scope of SEM.

    It is envisaged that the service implementing this API, also implements the generic [Events](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/events.v1.yaml) and [Webhooks](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/webhooks.v1.yaml) API to enable subscription to changes vs polling.


    Events generated by the Usage API are connected to (first) use of the product.
     - `la.usage.first` - First time
     - `la.usage.ongoing` - Regular usage (not yet expected to be used)

    ## Scopes
    The usage api uses a the foolowing scopes
    -  `la.usage' - a scope that allows an LA to send usage events to a MP
    -  `la.usage' - a scope that allows a party to request usage information from an LA
  contact:
    name: SEM
    url: 'https://stichtingsem.org/'
servers:
  - url: 'https://example.stichtingsem.org/api'
    description: usage
paths:
  '/usage/entitlement/{entitlementid}':
    parameters:
      - schema:
          type: string
        name: entitlementid
        in: path
        required: true
    get:
      summary: Get usage per entitlement
      x-tags:
        - usage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementUsage'
      operationId: get-usage-by-entitlement-id
      description: |-
        Retrieve the full usage based on a entitlement-id, needs to confirm that the caller is able to access either based on their provider information (they can only see their own usage) in the case of the provider scope.
        This API has pagination, using `start` and `limit`, with an optional `status` filter.
      security:
        - APIKey:
            - la.usage
      parameters:
        - in: query
          name: start
          description: 'Start point for pagination of results, defaults to 0,'
          schema:
            type: integer
            format: int32
          examples:
            default:
              value: 0
              summary: The start point for pagination
        - in: query
          name: limit
          description: 'Limit of number of results returned by page, defaults to 20 with max 1000.'
          schema:
            type: integer
            maximum: 100
            format: int32
          examples:
            default:
              value: 20
              summary: The default value if none is provided
            max:
              value: 100
              summary: The largest recommended page size
  /usage/individual:
    parameters: []
    get:
      summary: Get individual usage
      x-tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndividualUsage'
      operationId: get-usage-user-userid
      parameters:
        - schema:
            type: string
          in: query
          name: userid
          description: userid
        - schema:
            type: string
          in: query
          name: eckid
          description: eckid
      security:
        - APIKey:
            - la.usage
      description: Get all usages for an individual student
x-tags:
  - name: entitlements
  - name: usage
components:
  schemas:
    UsageEvent:
      title: Usage API event
      type: object
      description: |
        This is an API provided by the LA in the SEM ecosystem, and is designed to enable a MP to make the usage information about teachers and learners of product available to the rest of the ecosystem in a security and privacy concious way.
      properties:
        entitlementId:
          type: string
        schemaVersion:
          type: integer
          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'
        schoolId:
          type: string
        userId:
          type: string
          description: userid. (nledupersonrealId or nledupersonprofileId)
        eckId:
          type: string
        usageDate:
          type: string
          format: date
        usageType:
          type: string
          enum:
            - uniqueActivation
            - weeklyActivation
            - monthlyActivation
            - InitialActivation
          description: Type of usage report. Currently only initialActivations are implemented
      required:
        - entitlementId
        - schoolId
        - usageDate
        - usageType
    EntitlementUsage:
      title: EntitlementUsage
      type: object
      description: |
        This is an API provided by the LA in the SEM ecosystem, and is designed to enable a MP to make the usage information about teachers and learners of product available to the rest of the ecosystem in a security and privacy concious way.
      properties:
        entitlementId:
          type: string
        schemaVersion:
          type: integer
          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'
        schoolId:
          type: string
        status:
          type: string
          enum:
            - cancelled
            - blocked
            - entiled
            - provisioned
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/License'
      required:
        - entitlementId
        - schoolId
        - status
        - licenses
    License:
      title: License
      type: object
      description: Usage details per licencee. Only activated entitlements are added in this list as license
      properties:
        userId:
          type: string
          description: userid. (nledupersonrealId or nledupersonprofileId)
        eckId:
          type: string
        status:
          type: string
          description: The status of the entitlement for this entitlee. Only added after the first activation for this entitlee.
          enum:
            - activated
            - cancelled
            - blocked
        frequencyOfUsage:
          type: integer
          description: 'optional: Indicator how often the entitlee has used the product (count at moment of login). Exact number is not so relevant, just a good indication to see if the product is actually used or just activated.'
      required:
        - userId
        - firstUsed
    IndividualUsage:
      title: IndividualUsage
      type: object
      description: |
        This is an API provided by the LA in the SEM ecosystem, and is designed to enable a MP to make the usage information about teachers and learners of product available to the rest of the ecosystem in a security and privacy concious way.
      properties:
        eckId:
          type: string
        userId:
          type: string
          description: userid. (nledupersonrealId or nledupersonprofileId)
        schemaVersion:
          type: integer
          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'
        entitlementUsageList:
          type: array
          items:
            $ref: '#/components/schemas/IndividualLicense'
      required:
        - entitlementUsageList
    IndividualLicense:
      title: IndividualLicense
      type: object
      description: 'Usage information per entilement for a student, only activated entitlements are in the list'
      properties:
        entitlementId:
          type: string
          description: id of the entitlement
        status:
          $ref: '#/components/schemas/Status'
        usage:
          $ref: '#/components/schemas/Usage'
      required:
        - entitlementId
    Usage:
      title: Usage
      type: object
      properties:
        firstUsed:
          type: string
          description: Date - time that the entitlement becomes active on the moment that the user access the product for the firsttime. can be null if never activated
        lastUsed:
          type: string
          description: Date - time that the product is used for the last time. Even if the prduct's license periode within this entitlement has expired
        frequencyOfUsage:
          type: integer
          description: 'optional: Indicator how often the entilee has used the product (count at moment of login). Exact number is not so relevant, just a good indication to see if the product is actually used or just activated.'
    Status:
      title: Status
      type: object
      properties:
        status:
          type: string
          description: The status of the entitlement for this entitlee. Only added after the first activation for this entitlee.
          enum:
            - activated
            - cancelled
            - blocked
        validUntil:
          type: string
          format: date
          description: |
            Moment the license expires
  securitySchemes:
    APIKey:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: ''
          refreshUrl: ''
          scopes:
            la.usage: ''
      description: ''
